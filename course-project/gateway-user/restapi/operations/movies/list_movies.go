// Code generated by go-swagger; DO NOT EDIT.

package movies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListMoviesHandlerFunc turns a function with the right signature into a list movies handler
type ListMoviesHandlerFunc func(ListMoviesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListMoviesHandlerFunc) Handle(params ListMoviesParams) middleware.Responder {
	return fn(params)
}

// ListMoviesHandler interface for that can handle valid list movies params
type ListMoviesHandler interface {
	Handle(ListMoviesParams) middleware.Responder
}

// NewListMovies creates a new http.Handler for the list movies operation
func NewListMovies(ctx *middleware.Context, handler ListMoviesHandler) *ListMovies {
	return &ListMovies{Context: ctx, Handler: handler}
}

/*ListMovies swagger:route GET /movies movies listMovies

ListMovies list movies API

*/
type ListMovies struct {
	Context *middleware.Context
	Handler ListMoviesHandler
}

func (o *ListMovies) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListMoviesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
